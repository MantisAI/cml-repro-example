name: train nlu and ner models

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_REGION: us-east-1
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python
  REPO_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  SKIP: dvc-pre-commit,dvc-pre-push,dvc-post-checkout
  WANDB_MODE: offline


jobs:
  deploy-runner:
    runs-on: [ubuntu-latest]
    steps:
      - uses: iterative/setup-cml@v1.2.1
        with:
          version: '0.18.15'
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Deploy runner on EC2
        shell: bash
        run: |
          cml-runner \
          --cloud aws \
          --cloud-region us-east \
          --cloud-type g5.xlarge \
          --cloud-spot true \
          --cloud-spot-price 1.123 \
          --labels cml-gpu \
          --idle-timeout 60 \
          --reuse-idle \
          --cml-version="v0.18.15" \
          --tpi-version="= 0.11.14"
  model-training:
    needs: deploy-runner
    runs-on: [self-hosted, cml-gpu]
    timeout-minutes: 1440 # One day
    container:
      image: ghcr.io/iterative/cml@sha256:df596d1d182f20f63bbca976af24ce8b262925ebf9f041f77d33f1a4ac3fd67a
      options: --gpus all
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10.9'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt
    - name: Install dependencies
      run: |
        apt-get update -y
        apt-get install make python3-pip virtualenv libpq-dev
    - name: setup-repo
      run: |

        cml ci \
          --user-email='github@mantisnlp.com' \
          --user-name='mantis-action-runner'

        git fetch origin
        git checkout ${{ github.head_ref || github.ref_name }}
        git branch -va

        pip install "dvc[s3]"
    - name: create-report-md
      run: |

        echo "## Metrics" > report.md
        echo "This report was created authomatically by the CML workflow `.github/workflows/cml.yaml`"
    - name: make-report-comment
      run: |
        cml comment create --pr report.md
